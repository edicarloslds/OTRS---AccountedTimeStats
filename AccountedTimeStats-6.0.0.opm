<?xml version="1.0" encoding="utf-8" ?>
<otrs_package version="1.1">
    <Name>AccountedTimeStats</Name>
    <Version>6.0.0</Version>
    <Vendor>Edicarlos Lopes</Vendor>
    <URL></URL>
    <License>GNU AFFERO GENERAL PUBLIC LICENSE Version 3, November 2007</License>
    <ChangeLog Date="2018-03-26 14:39:00" Version="6.0.0">Atualizado para a versão 6 do OTRS.</ChangeLog>
    <Description Lang="pt_BR">Modulo para exibir relatórios de tempo comtabilizado.</Description>
    <Description Lang="en">Module to display accounted time reports.</Description>
    <Framework>6.x</Framework>
    <IntroInstall Lang="pt_BR" Title="obrigado!" Type="post">Obrigado por instalar o módulo Estatísticas de Tempo Contabilizado.</IntroInstall>
    <IntroInstall Lang="en" Title="obrigado!" Type="post">Thank you for installing the Accounting Time Stats module.</IntroInstall>
    <BuildDate>2018-03-26 17:50:23</BuildDate>
    <BuildHost>localhost.localdomain.localdomain</BuildHost>
    <Filelist>
        <File Location="Kernel/Config/Files/XML/AccountedTimeStats.xml" Permission="644" Encode="Base64"></File>
        <File Location="Kernel/Language/pt_BR_AccountedTimeStats.pm" Permission="644" Encode="Base64">IyAtLQojIENvcHlyaWdodCAoQykgMjAxNyBFZGljYXJsb3MgTG9wZXMgZG9zIFNhbnRvcyA8ZWRpY2FybG9zLmxkcyBhdCBnbWFpbC5jb20+CiMgLS0KIyBUaGlzIHNvZnR3YXJlIGNvbWVzIHdpdGggQUJTT0xVVEVMWSBOTyBXQVJSQU5UWS4gRm9yIGRldGFpbHMsIHNlZQojIHRoZSBlbmNsb3NlZCBmaWxlIENPUFlJTkcgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24gKEFHUEwpLiBJZiB5b3UKIyBkaWQgbm90IHJlY2VpdmUgdGhpcyBmaWxlLCBzZWUgaHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2FncGwudHh0LgojIC0tCgpwYWNrYWdlIEtlcm5lbDo6TGFuZ3VhZ2U6OnB0X0JSX0FjY291bnRlZFRpbWVTdGF0czsKCnVzZSBzdHJpY3Q7CnVzZSB3YXJuaW5nczsKdXNlIHV0Zjg7CgpzdWIgRGF0YSB7CiAgICBteSAkU2VsZiA9IHNoaWZ0OwoKCSMgZnJvbnRlbmQgdGVtcGxhdGUgb3ZlcnZpZXcKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J0FjY291bnRlZCBUaW1lIFN0YXRzJ30gPSAnRXN0YXTDrXN0aWNhcyBkZSBUZW1wbyBDb250YWJpbGl6YWRvJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J0hlcmUgeW91IGNhbiBzZWUgdGhlIGFjY291bnRlZCB0aW1lIHN0YXRzLid9ID0gJ0FxdWkgdm9jw6ogcG9kZSB2aXN1YWxpemFyIGFzIGVzdGF0w61zdGljYXMgZGUgdGVtcG8gY29udGFiaWxpemFkby4nOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnU2VhcmNoIFBhcmFtcyd9ID0gJ1BhcsOibWV0cm9zIGRhIFBlc3F1aXNhJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J09uIGFueSBkYXRlLid9ID0gJ0VtIHF1YWxxdWVyIGRhdGEuJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J0FjY291bnRlZCB0aW1lIGJldHdlZW4nfSA9ICdUZW1wbyBDb250YWJpbGl6YWRvIGVudHJlJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J1R5cGUgVmlldyd9ID0gJ1RpcG8gZGUgVmlzw6NvJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J09ubHkgYWNjb3VudGVkIHRpbWUgYnkgc2VsZWN0ZWQgYWdlbnQocykuJ30gPSAnU29tZW50ZSBvIHRlbXBvIGNvbnRhYmlsaXphZG8gcGVsbyhzKSBhdGVuZGVudGUocykgc2VsZWNpb25hZG8ocykuJzsKCQoJIyBmcm9udGVuZCB0ZW1wbGF0ZSBzY3JlZW4gdmlldwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnU2NyZWVuIFZpZXcnfSA9ICdFeGliacOnw6NvIGVtIFRlbGEnOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnU2NyZWVuJ30gPSAnVmlzdWFsaXphcic7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydUaWNrZXQgTGlzdCd9ID0gJ0xpc3RhIGRlIENoYW1hZG9zJzsKfQoKMTsK</File>
        <File Location="Custom/Kernel/Modules/AgentAccountedTimeStats.pm" Permission="644" Encode="Base64"></File>
        <File Location="Custom/Kernel/Output/HTML/Templates/Standard/AgentAccountedTimeStats.tt" Permission="644" Encode="Base64">IyAtLQojIEN1c3RvbS9LZXJuZWwvT3V0cHV0L0hUTUwvVGVtcGxhdGVzL1N0YW5kYXJkL0FnZW50QWNjb3VudGVkVGltZVN0YXRzLnR0IC0gZnJvbnRlbmQgdGVtcGxhdGUKIyBDb3B5cmlnaHQgKEMpIDIwMTcgRWRpY2FybG9zIExvcGVzIGRvcyBTYW50b3MgPGVkaWNhcmxvcy5sZHMgYXQgZ21haWwuY29tPgojIC0tCiMgVGhpcyBzb2Z0d2FyZSBjb21lcyB3aXRoIEFCU09MVVRFTFkgTk8gV0FSUkFOVFkuIEZvciBkZXRhaWxzLCBzZWUKIyB0aGUgZW5jbG9zZWQgZmlsZSBDT1BZSU5HIGZvciBsaWNlbnNlIGluZm9ybWF0aW9uIChBR1BMKS4gSWYgeW91CiMgZGlkIG5vdCByZWNlaXZlIHRoaXMgZmlsZSwgc2VlIGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy9hZ3BsLnR4dC4KIyAtLQoKPGRpdiBjbGFzcz0iTWFpbkJveCBBUklBUm9sZU1haW4gTGF5b3V0Rml4ZWRTaWRlYmFyIFNpZGViYXJGaXJzdCI+CiAgICA8aDE+WyUgVHJhbnNsYXRlKCJBY2NvdW50ZWQgVGltZSBTdGF0cyIpIHwgaHRtbCAlXTwvaDE+CgkKCTxkaXYgY2xhc3M9IlNpZGViYXJDb2x1bW4iPgogICAgICAgIDxkaXYgY2xhc3M9IldpZGdldFNpbXBsZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9IkhlYWRlciI+CiAgICAgICAgICAgICAgICA8aDI+WyUgVHJhbnNsYXRlKCJIaW50IikgfCBodG1sICVdPC9oMj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9IkNvbnRlbnQiPgogICAgICAgICAgICAgICAgPHAgY2xhc3M9IkZpZWxkRXhwbGFuYXRpb24iPgogICAgICAgICAgICAgICAgICAgIFslIFRyYW5zbGF0ZSgiSGVyZSB5b3UgY2FuIHNlZSB0aGUgYWNjb3VudGVkIHRpbWUgc3RhdHMuIikgfCBodG1sICVdCiAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CgkKICAgIDxkaXYgY2xhc3M9IkNvbnRlbnRDb2x1bW4iPgoJCTxkaXYgY2xhc3M9IldpZGdldFNpbXBsZSI+CQkJCgkJCTxkaXYgY2xhc3M9IkhlYWRlciI+CiAgICAgICAgICAgICAgICA8aDI+WyUgVHJhbnNsYXRlKCJTZWFyY2ggUGFyYW1zIikgfCBodG1sICVdPC9oMj4KICAgICAgICAgICAgPC9kaXY+CgkJCTxkaXYgY2xhc3M9IkNvbnRlbnQiPgoJCQkJPGZvcm0gYWN0aW9uPSJbJSBFbnYoIkNHSUhhbmRsZSIpICVdIiBtZXRob2Q9InBvc3QiIGVuY3R5cGU9Im11bHRpcGFydC9mb3JtLWRhdGEiIGNsYXNzPSJWYWxpZGF0ZSI+CgkJCQkJPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iQWN0aW9uIiB2YWx1ZT0iWyUgRW52KCJBY3Rpb24iKSAlXSIvPgoJCQkJCTxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9IlN1YmFjdGlvbiIgdmFsdWU9IlNlYXJjaCIvPgoJCQkJCTxmaWVsZHNldCBjbGFzcz0iVGFibGVMaWtlIj4KCQkJCQkKCQkJCQkJPGxhYmVsIGZvcj0iUXVldWVJRHMiPlslIFRyYW5zbGF0ZSgiUXVldWUiKSB8IGh0bWwgJV06PC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iRmllbGQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgWyUgRGF0YS5RdWV1ZXNTdHJnICVdCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJDbGVhciI+PC9kaXY+CgoJCQkJCQk8bGFiZWwgZm9yPSJPd25lcklEcyI+WyUgVHJhbnNsYXRlKCJBZ2VudCIpIHwgaHRtbCAlXS9bJSBUcmFuc2xhdGUoIk93bmVyIikgfCBodG1sICVdOjwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IkZpZWxkIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIFslIERhdGEuT3duZXJTdHJnICVdCQkJCQkJCQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iQ2xlYXIiPjwvZGl2PgoJCQkJCQkKCQkJCQkJPGRpdiBpZD0iT3duZXJWaWV3IiBjbGFzcz0iRmllbGQgSGlkZGVuIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgaWQ9Ik93bmVyVGltZVZpZXciIG5hbWU9Ik93bmVyVGltZVZpZXciIHZhbHVlPSIxIj48c3BhbiBjbGFzcz0iRmllbGRFeHBsYW5hdGlvbiI+WyUgVHJhbnNsYXRlKCJPbmx5IGFjY291bnRlZCB0aW1lIGJ5IHNlbGVjdGVkIGFnZW50KHMpLiIpICVdPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iQ2xlYXIiPjwvZGl2PgpbJSBXUkFQUEVSIEpTT25Eb2N1bWVudENvbXBsZXRlICVdCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4vLzwhW0NEQVRBWwokKCcjT3duZXJJRHMnKS5iaW5kKCdjaGFuZ2UnLCBmdW5jdGlvbiAoRXZlbnQpIHsgICAgCglpZiggJCgnI093bmVySURzJykudmFsKCkgKXsKCQkkKCcjT3duZXJWaWV3JykucmVtb3ZlQ2xhc3MoJ0hpZGRlbicpOwoJfQoJZWxzZXsKCQkkKCcjT3duZXJWaWV3JykuYWRkQ2xhc3MoJ0hpZGRlbicpOwoJfQp9KTsKLy9dXT48L3NjcmlwdD4KWyUgRU5EICVdCQkJCQkJCgkJCQkJCgkJCQkJCTxsYWJlbCBmb3I9IlRpbWVTZWFyY2hUaW1lUG9pbnQiPlslIFRyYW5zbGF0ZSgiUGVyaW9kIikgfCBodG1sICVdOjwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IkZpZWxkIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJyYWRpbyIgbmFtZT0iVGltZVNlYXJjaFR5cGUiIGlkPSJUaW1lU2VhcmNoVGltZVBvaW50IiB2YWx1ZT0iVGltZVBvaW50Ii8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbJSBUcmFuc2xhdGUoIkFjY291bnRlZCB0aW1lIikgfCBodG1sICVdIFslIERhdGEuQWNjb3VudGVkVGltZVBvaW50U3RhcnQgJV0gWyUgRGF0YS5BY2NvdW50ZWRUaW1lUG9pbnQgJV0gWyUgRGF0YS5BY2NvdW50ZWRUaW1lUG9pbnRGb3JtYXQgJV0uCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJDbGVhciI+PC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJGaWVsZCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0icmFkaW8iIG5hbWU9IlRpbWVTZWFyY2hUeXBlIiB2YWx1ZT0iVGltZVNsb3QiIGNoZWNrZWQ9ImNoZWNrZWQiLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIFslIFRyYW5zbGF0ZSgiQWNjb3VudGVkIHRpbWUgYmV0d2VlbiIpIHwgaHRtbCAlXSBbJSBEYXRhLkFjY291bnRlZFRpbWVTdGFydCAlXSBbJSBUcmFuc2xhdGUoImFuZCIpIHwgaHRtbCAlXSBbJSBEYXRhLkFjY291bnRlZFRpbWVTdG9wICVdLgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iQ2xlYXIiPjwvZGl2PgkJCQkJCQoJCQkJCQkJCQkJCQkKCQkJCQkJPGxhYmVsIGZvcj0iT3V0cHV0Rm9ybWF0IiBjbGFzcz0iTWFuZGF0b3J5Ij48c3BhbiBjbGFzcz0iTWFya2VyIj4qPC9zcGFuPiBbJSBUcmFuc2xhdGUoIkZvcm1hdCIpIHwgaHRtbCAlXTo8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJGaWVsZCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbJSBEYXRhLk91dHB1dEZvcm1hdFN0cmcgJV0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgkJCQkJCTxkaXYgaWQ9Ik91dHB1dEZvcm1hdEVycm9yIiBjbGFzcz0iVG9vbHRpcEVycm9yTWVzc2FnZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cD5bJSBUcmFuc2xhdGUoIlRoaXMgZmllbGQgaXMgcmVxdWlyZWQuIikgfCBodG1sICVdPC9wPgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iQ2xlYXIiPjwvZGl2PgoJCQkJCQkKCQkJCQkJPGRpdiBjbGFzcz0iRmllbGQgU3BhY2luZ1RvcCI+ICAgICAgICAgICAgICAgICAgICAgICAgICAgIAkJCQkJCQkKCQkJCQkJCTxkaXYgY2xhc3M9IlZhbHVlIj4KCQkJCQkJCQk8YnV0dG9uIGNsYXNzPSJQcmltYXJ5IENhbGxGb3JBY3Rpb24iIHR5cGU9InN1Ym1pdCIgaWQ9IlN1Ym1pdCIgdmFsdWU9IlslIFRyYW5zbGF0ZSgiU2VhcmNoIikgfCBodG1sICVdIj4KCQkJCQkJCQkJPHNwYW4+PGkgY2xhc3M9ImZhIGZhLXNlYXJjaCI+PC9pPglbJSBUcmFuc2xhdGUoIlNlYXJjaCIpIHwgaHRtbCAlXTwvc3Bhbj4KCQkJCQkJCQk8L2J1dHRvbj4JCQkJCQkJCQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgkJCQkJCTwvZGl2PgoJCQkJCQkKWyUgV1JBUFBFUiBKU09uRG9jdW1lbnRDb21wbGV0ZSAlXQo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+Ly88IVtDREFUQVsKJCgnI1N1Ym1pdCcpLmJpbmQoJ2NsaWNrJywgZnVuY3Rpb24gKEV2ZW50KSB7CiAgICB2YXIgRm9ybWF0ID0gJCgnI091dHB1dEZvcm1hdCcpLnZhbCgpLAogICAgICAgIFVSTDsKCiAgICAvLyBPcGVuIGJvdGggSFRNTCBhbmQgUERGIG91dHB1dCBpbiBhIHBvcHVwIGJlY2F1c2UgUERGIGlzIHNob3duIGlubGluZQogICAgaWYgKEZvcm1hdCA9PT0gJ1ByaW50JyB8fCBGb3JtYXQgPT09ICdTY3JlZW4nICkgewogICAgICAgIFVSTCA9ICdbJSBFbnYoIkJhc2VsaW5rIikgJV0nICsgQ29yZS5BSkFYLlNlcmlhbGl6ZUZvcm0oJCgnI091dHB1dEZvcm1hdCcpLnBhcmVudHMoJ2Zvcm0nKSk7CiAgICAgICAgQ29yZS5VSS5Qb3B1cC5PcGVuUG9wdXAoVVJMLCAnQWNjb3VudGVkIFRpbWUgU3RhdHMnLCAnRGVmYXVsdCcpOwogICAgICAgIHJldHVybiBmYWxzZTsKICAgIH1lbHNlewoJCXJldHVybiB0cnVlOwoJfQp9KTsKLy9dXT48L3NjcmlwdD4KWyUgRU5EICVdCgkJCQkJCQoJCQkJCQk8ZGl2IGNsYXNzPSJTcGFjaW5nVG9wIj48L2Rpdj4KCQkJCQkJCgkJCQkJPC9maWVsZHNldD4JCQkJCgkJCQk8L2Zvcm0+CgkJCTwvZGl2PgoJCTwvZGl2PgkJCiAgICA8L2Rpdj4KPC9kaXY+ClslIFdSQVBQRVIgSlNPbkRvY3VtZW50Q29tcGxldGUgJV0KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPi8vPCFbQ0RBVEFbCgovL11dPjwvc2NyaXB0PgpbJSBFTkQgJV0K</File>
        <File Location="Custom/Kernel/Output/HTML/Templates/Standard/Statistics/ScreenView.tt" Permission="644" Encode="Base64">IyAtLQojIEN1c3RvbS9LZXJuZWwvT3V0cHV0L0hUTUwvVGVtcGxhdGVzL1N0YW5kYXJkL1N0YXRpc3RpY3MvU2NyZWVuVmlldy50dCAtIGZyb250ZW5kIHRlbXBsYXRlCiMgQ29weXJpZ2h0IChDKSAyMDE3IEVkaWNhcmxvcyBMb3BlcyBkb3MgU2FudG9zIDxlZGljYXJsb3MubGRzIGF0IGdtYWlsLmNvbT4KIyAtLQojIFRoaXMgc29mdHdhcmUgY29tZXMgd2l0aCBBQlNPTFVURUxZIE5PIFdBUlJBTlRZLiBGb3IgZGV0YWlscywgc2VlCiMgdGhlIGVuY2xvc2VkIGZpbGUgQ09QWUlORyBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbiAoQUdQTCkuIElmIHlvdQojIGRpZCBub3QgcmVjZWl2ZSB0aGlzIGZpbGUsIHNlZSBodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvYWdwbC50eHQuCiMgLS0KCjxkaXYgY2xhc3M9Ik1haW5Cb3ggQXJpYVJvbGVNYWluIj4KICAgIDxoMSBjbGFzcz0iQ2VudGVyIFNwYWNpbmdCb3R0b20iPlslIFRyYW5zbGF0ZSgiQWNjb3VudGVkIFRpbWUgU3RhdHMiKSB8IGh0bWwgJV08L2gxPgoJCgk8ZGl2IGNsYXNzPSJXaWRnZXRTaW1wbGUiPgoJCTxkaXYgY2xhc3M9IkhlYWRlciI+CgkJCTxoMj5bJSBUcmFuc2xhdGUoIlRpY2tldCBMaXN0IikgfCBodG1sICVdPC9oMj4KCQkJClslIFJlbmRlckJsb2NrU3RhcnQoIkNvbnRleHRTZXR0aW5ncyIpICVdCQkJCgkJCTx1bCBjbGFzcz0iQ29udGV4dEZ1bmN0aW9ucyI+CgkJCQk8bGkgY2xhc3M9IkNvbnRleHRTZXR0aW5ncyI+CgkJCQkJPGEgaHJlZj0iIyIgaWQ9IlNob3dDb250ZXh0U2V0dGluZ3NEaWFsb2ciIHRpdGxlPSJbJSBUcmFuc2xhdGUoIlNldHRpbmdzIikgfCBodG1sICVdIj4KCQkJCQkJPGkgY2xhc3M9ImZhIGZhLWNvZyI+PC9pPgoJCQkJCQk8c3Bhbj5bJSBUcmFuc2xhdGUoIlNldHRpbmdzIikgfCBodG1sICVdPC9zcGFuPgoJCQkJCTwvYT4KCQkJCTwvbGk+CgkJCTwvdWw+CgoJCQk8ZGl2IGlkPSJDb250ZXh0U2V0dGluZ3NEaWFsb2dDb250YWluZXIiIGNsYXNzPSJIaWRkZW4iPgoJCQkJPGZvcm0gYWN0aW9uPSJbJSBFbnYoIkNHSUhhbmRsZSIpICVdIiBtZXRob2Q9InBvc3QiIGlkPSJDb250ZXh0U2V0dGluZ3NEaWFsb2ciPgoJCQkJCTxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9IkFjdGlvbiIgdmFsdWU9IkFnZW50QWNjb3VudGVkVGltZVN0YXRzIi8+CgkJCQkJPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iU3ViYWN0aW9uIiB2YWx1ZT0iVXBkYXRlIi8+CgkJCQkJPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iR3JvdXAiIHZhbHVlPSJbJSBEYXRhLkdyb3VwIHwgaHRtbCAlXSIvPgoJCQkJCTxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9IlJlZGlyZWN0VVJMIiB2YWx1ZT0iWyUgRGF0YS5SZXF1ZXN0ZWRVUkwgfCBodG1sICVdIi8+CgkJCQkJPGZpZWxkc2V0IGNsYXNzPSJUYWJsZUxpa2UiPgoJCQkJCQk8bGFiZWwgZm9yPSJbJSBEYXRhLlByZWZlcmVuY2VzS2V5IHwgaHRtbCAlXSI+WyUgVHJhbnNsYXRlKCJUaWNrZXRzIHBlciBwYWdlIikgfCBodG1sICVdOjwvbGFiZWw+CgkJCQkJCTxkaXYgY2xhc3M9IkZpZWxkIj4KCQkJCQkJCVslIERhdGEuUGFnZVNob3duU3RyaW5nICVdCgkJCQkJCTwvZGl2PgoJCQkJCQk8ZGl2IGNsYXNzPSJDbGVhciI+PC9kaXY+CgkJCQkJPC9maWVsZHNldD4KCQkJCTwvZm9ybT4KCQkJPC9kaXY+CgkJPC9kaXY+CgkJClslIFdSQVBQRVIgSlNPbkRvY3VtZW50Q29tcGxldGUgJV0KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPi8vPCFbQ0RBVEFbCiQoJyNTaG93Q29udGV4dFNldHRpbmdzRGlhbG9nJykuYmluZCgnY2xpY2snLCBmdW5jdGlvbiAoRXZlbnQpIHsKICAgIENvcmUuVUkuRGlhbG9nLlNob3dDb250ZW50RGlhbG9nKCQoJyNDb250ZXh0U2V0dGluZ3NEaWFsb2dDb250YWluZXInKSwgWyUgVHJhbnNsYXRlKCJTZXR0aW5ncyIpIHwgSlNPTiAlXSwgJzIwJScsICdDZW50ZXInLCB0cnVlLAogICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgTGFiZWw6IFslIFRyYW5zbGF0ZSgiU3VibWl0IikgfCBKU09OICVdLAogICAgICAgICAgICAgICAgVHlwZTogJ1N1Ym1pdCcsCiAgICAgICAgICAgICAgICBDbGFzczogJ1ByaW1hcnknfQogICAgICAgIF0pOwogICAgRXZlbnQucHJldmVudERlZmF1bHQoKTsKICAgIEV2ZW50LnN0b3BQcm9wYWdhdGlvbigpOwogICAgcmV0dXJuIGZhbHNlOwp9KTsKLy9dXT48L3NjcmlwdD4KWyUgRU5EICVdClslIFJlbmRlckJsb2NrRW5kKCJDb250ZXh0U2V0dGluZ3MiKSAlXQoJCQoJCTxkaXYgY2xhc3M9IkFjdGlvblJvdyI+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJQYWdpbmF0aW9uIj4KWyUgUmVuZGVyQmxvY2tTdGFydCgiT3ZlcnZpZXdOYXZCYXJQYWdlTmF2QmFyIikgJV0KICAgICAgICAgICAgICAgIFslIERhdGEuUmVzdWx0TG9uZyAlXQogICAgICAgICAgICAgICAgWyUgRGF0YS5TaXRlTmF2QmFyTG9uZyAlXQpbJSBSZW5kZXJCbG9ja0VuZCgiT3ZlcnZpZXdOYXZCYXJQYWdlTmF2QmFyIikgJV0KICAgICAgICAgICAgPC9zcGFuPgogICAgICAgIDwvZGl2PgoJCQoJCTxkaXYgY2xhc3M9IkNvbnRlbnQiPgoJCQk8dGFibGUgY2xhc3M9IlNvcnRhYmxlIERhdGFUYWJsZSIgaWQ9IlRhYmxlIj4KCQkJCTx0aGVhZD4JCQkJCgkJCQkJPHRyPgpbJSBSZW5kZXJCbG9ja1N0YXJ0KCJIZWFkZXIiKSAlXQkJCQkJCgkJCQkJCTx0aCBjbGFzcz0iQ2VudGVyIj4KCQkJCQkJCTxzcGFuPgoJCQkJCQkJCVslIElGIChEYXRhLkhlYWRlckl0ZW0gPT0gJ0FjY291bnRlZFRpbWUnKSAlXQoJCQkJCQkJCQlbJSBUcmFuc2xhdGUoRGF0YS5IZWFkZXJJdGVtKSB8IGh0bWwgJV0gKFslIFRyYW5zbGF0ZSggQ29uZmlnKCJBY2NvdW50ZWRUaW1lRm9ybWF0IikgKSAlXSkKCQkJCQkJCQlbJSBFTFNFICVdCgkJCQkJCQkJCVslIFRyYW5zbGF0ZShEYXRhLkhlYWRlckl0ZW0pIHwgaHRtbCAlXQoJCQkJCQkJCVslIEVORCAlXQoJCQkJCQkJPC9zcGFuPgoJCQkJCQk8L3RoPgpbJSBSZW5kZXJCbG9ja0VuZCgiSGVhZGVyIikgJV0JCQkJCQkKCQkJCQk8L3RyPgkJCQkJCgkJCQk8L3RoZWFkPgoJCQkJPHRib2R5PgpbJSBSZW5kZXJCbG9ja1N0YXJ0KCJOb0RhdGFGb3VuZCIpICVdCiAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQgY29sc3Bhbj0iNiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbJSBUcmFuc2xhdGUoIk5vIGRhdGEgZm91bmQuIikgfCBodG1sICVdCiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KWyUgUmVuZGVyQmxvY2tFbmQoIk5vRGF0YUZvdW5kIikgJV0KWyUgUmVuZGVyQmxvY2tTdGFydCgiUm93IikgJV0KCQkJCQk8dHI+ClslIFJlbmRlckJsb2NrU3RhcnQoIkl0ZW1Sb3ciKSAlXQkJCgkJCQkJCTx0ZD4KCQkJCQkJCTxzcGFuPlslIERhdGEuRGF0YUl0ZW0gfCBodG1sICVdPC9zcGFuPgoJCQkJCQk8L3RkPgpbJSBSZW5kZXJCbG9ja0VuZCgiSXRlbVJvdyIpICVdCgkJCQkJPC90cj4KWyUgUmVuZGVyQmxvY2tFbmQoIlJvdyIpICVdCQkJCQkKCQkJCTwvdGJvZHk+ClslIFJlbmRlckJsb2NrU3RhcnQoIlN1YnRvdGFsIikgJV0JCQkJCgkJCQk8dGZvb3Q+CgkJCQkJPHRyPgoJCQkJCSAgPHRkIGNvbHNwYW49IlslIERhdGEuQ29sc3BhbiB8IGh0bWwgJV0iPjxzcGFuPlN1YnRvdGFsPC9zcGFuPjwvdGQ+CgkJCQkJICA8dGQ+PHNwYW4+WyUgRGF0YS5BY2NvdW50ZWRUaW1lVG90YWwgfCBodG1sICVdPC9zcGFuPjwvdGQ+CgkJCQkJPC90cj4KCQkJCTwvdGZvb3Q+ClslIFJlbmRlckJsb2NrRW5kKCJTdWJ0b3RhbCIpICVdCQkJCQoJCQk8L3RhYmxlPgoJCTwvZGl2PgoJPC9kaXY+CgkKICAgIDxkaXYgY2xhc3M9IkNlbnRlciBTcGFjaW5nVG9wIj48L2Rpdj4KPC9kaXY+</File>
        <File Location="var/httpd/htdocs/skins/Agent/default/css/Core.Agent.AccountedTimeStats.css" Permission="644" Encode="Base64">LyoqCiAqIEBwcm9qZWN0ICAgICBPVFJTIChodHRwOi8vd3d3Lm90cnMub3JnKSAtIEFnZW50IEZyb250ZW5kCiAqIEBjb3B5cmlnaHQgICBPVFJTIEFHCiAqIEBsaWNlbnNlICAgICBBR1BMIChodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvYWdwbC50eHQpCiAqLwoKLyoqCiAqIEBwYWNrYWdlICAgICBTa2luICJEZWZhdWx0IgogKiBAc2VjdGlvbiAgICAgQXBwbGljYXRpb24KICogQHN1YnNlY3Rpb24gIEFnZW50U3RhdGlzdGljcwogKi8KCkBtZWRpYSBzY3JlZW4scHJvamVjdGlvbix0dixoYW5kaGVsZCB7CgovKioKICogQHN1YnN1YnNlY3Rpb24gICAgIEdlbmVyYWwKICovCiAKLkRhdGFUYWJsZXsKCWJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7Cn0KCi5EYXRhVGFibGUgdGZvb3R7CgliYWNrZ3JvdW5kOiAjZWVlZWVlOwoJYm9yZGVyLXRvcDogMXB4IHNvbGlkICNjY2M7Cn0KCi5EYXRhVGFibGUgdGZvb3QgdHJ7CiAgICBwb3NpdGlvbjogcmVsYXRpdmU7Cn0KCi5EYXRhVGFibGUgdGZvb3QgdHI6aG92ZXJ7CiAgICB6LWluZGV4OiAxMDsKfQoKLkRhdGFUYWJsZSB0Zm9vdCB0ZDpsYXN0LWNoaWxkewogICAgYm9yZGVyLXJpZ2h0OiBub25lOwp9CgouRGF0YVRhYmxlIHRmb290IHRyOmhvdmVyIHRkLAouRGF0YVRhYmxlIHRmb290IHRyOmFjdGl2ZSB0ZC5DbGlja2FibGV7CiAgICBiYWNrZ3JvdW5kOiAjRkNCMjRCOwp9CgouRGF0YVRhYmxlIHRmb290IHRyLkludmFsaWQgewogICAgY29sb3I6ICNDQ0M7Cn0KCi5EYXRhVGFibGUgdGZvb3QgdGQgewogICAgcGFkZGluZzogMCAxMHB4OwogICAgYm9yZGVyLXJpZ2h0OiAxcHggZG90dGVkICNDQ0M7Cglmb250LXdlaWdodDogYm9sZDsKfQoKLkRhdGFUYWJsZSB0Zm9vdCB0ZC5VbnJlYWRBcnRpY2xlcyB7CiAgICBwYWRkaW5nOiAwcHg7Cn0KCi5SVEwgLkRhdGFUYWJsZSB0Zm9vdCB0ZCB7CiAgICBib3JkZXItbGVmdDogMXB4IGRvdHRlZCAjQ0NDOwogICAgYm9yZGVyLXJpZ2h0OiBub25lOwp9CgouRGF0YVRhYmxlIHRmb290IHRyOmhvdmVyIHRkIHsKICAgICNib3JkZXItcmlnaHQtY29sb3I6ICNmZmY7Cn0KCi5EYXRhVGFibGUgdGZvb3QgdGQ6bGFzdC1jaGlsZCB7CiAgICBib3JkZXItcmlnaHQ6IG5vbmU7Cn0KCi5XaWRnZXRTaW1wbGUgPiAuQWN0aW9uUm93IHsKICAgIG92ZXJmbG93OiBhdXRvOwogICAgcGFkZGluZzogMHB4IDhweCAwcHg7Cn0KCn0gLyogZW5kIEBtZWRpYSAqLwo=</File>
    </Filelist>
</otrs_package>